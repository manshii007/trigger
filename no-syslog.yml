version: '2'

services:

    web:
      restart: always
      build:
        context: ./web
        dockerfile: TestDockerFile
      depends_on:
        - web_ffmpeg
        - postgres
        - redis
        - rabbitmq
      expose:
        - "8000"
      environment:
        - GOOGLE_APPLICATION_CREDENTIALS=/usr/src/app/tessact-subs-e9601f76f09c.json
      command: /usr/local/bin/gunicorn wsgi_testing:application -w 2 -b :8000


    web_ffmpeg:
      restart: always
      build:
        context: ./web
        dockerfile: TestDockerFile
      depends_on:
        - postgres
        - redis
        - rabbitmq
      expose:
        - "8000"
      environment:
        - GOOGLE_APPLICATION_CREDENTIALS=/usr/src/app/tessact-subs-e9601f76f09c.json
      volumes:
        - web-ffmpeg-data:/tmp/
      command: /usr/local/bin/celery -A trigger worker -l info

    nginx:
      restart: always
      build:
        context: ./nginx/
      ports:
        - "80:80"
        - "443:443"
      volumes_from:
        - web


    postgres:
      restart: always
      image: postgres:latest
      expose:
        - "5432"
      volumes:
        - pgdata:/var/lib/postgresql/data/


    redis:
      restart: always
      image: redis:latest
      expose:
        - "6379"
      volumes:
        - redisdata:/data


    rabbitmq:
      restart: always
      image: rabbitmq:3-management
      environment:
        RABBITMQ_DEFAULT_USER: 'adminuser'
        RABBITMQ_DEFAULT_PASS: 'adminuser'
        RABBITMQ_DEFAULT_VHOST: 'myvhost'
      ports:
        - "15672:15672"
        - "5672:5672"
      expose:
        - "5672"


volumes:
    elk-data:
    pgdata:
    redisdata:
    web-data:
    web-ffmpeg-data:

# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2018-12-27 11:42
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import utils.unique_filename
import uuid
import versatileimagefield.fields


class Migration(migrations.Migration):

    dependencies = [
        ('video', '0016_video_created_by'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('tags', '0030_spritetag'),
    ]

    operations = [
        migrations.CreateModel(
            name='BrandName',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.IntegerField(unique=True)),
                ('abbr', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='ChannelGenre',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChannelNetwork',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Commercial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ContentLanguage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlayoutTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('frame_in', models.PositiveIntegerField()),
                ('frame_out', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_approved', models.CharField(blank=True, choices=[('RIV', 'Review'), ('CLN', 'Clean'), ('ACP', 'Accepted'), ('NCP', 'Not Accepted'), ('CHK', 'Check')], default='CLN', max_length=3, null=True)),
                ('poster', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to=utils.unique_filename.unique_upload, verbose_name='Poster')),
                ('poster_ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20)),
                ('content_type', models.CharField(blank=True, choices=[('promo', 'Promo'), ('commercial', 'Commercial'), ('program', 'Program')], max_length=128, null=True)),
                ('object_id', models.UUIDField()),
                ('telecast_start_time', models.TimeField()),
                ('telecast_end_time', models.TimeField()),
                ('telecast_duration', models.IntegerField(blank=True, default=0, null=True)),
                ('is_original', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('object_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='playouttag', to='tags.Tag')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playouttag', to='video.Video')),
            ],
            options={
                'permissions': (('view_playouttag', 'Can view playout tag'),),
            },
        ),
        migrations.CreateModel(
            name='ProductionHouse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.Channel')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.ContentLanguage')),
                ('prod_house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.ProductionHouse')),
            ],
        ),
        migrations.CreateModel(
            name='Promo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='PromoCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PromoType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('abbr', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('code', models.IntegerField(unique=True)),
            ],
        ),
        migrations.DeleteModel(
            name='BrandTitle',
        ),
        migrations.AddField(
            model_name='advertiser',
            name='advertiser_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tags.AdvertiserGroup'),
        ),
        migrations.AddField(
            model_name='advertiser',
            name='code',
            field=models.IntegerField(null=True, unique=True),
        ),
        migrations.AddField(
            model_name='advertisergroup',
            name='code',
            field=models.IntegerField(null=True, unique=True),
        ),
        migrations.AddField(
            model_name='brandcategory',
            name='brand_sector',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tags.BrandSector'),
        ),
        migrations.AddField(
            model_name='brandcategory',
            name='code',
            field=models.IntegerField(null=True, unique=True),
        ),
        migrations.AddField(
            model_name='brandsector',
            name='code',
            field=models.IntegerField(null=True, unique=True),
        ),
        migrations.AddField(
            model_name='descriptor',
            name='code',
            field=models.IntegerField(null=True, unique=True),
        ),
        migrations.AddField(
            model_name='programgenre',
            name='code',
            field=models.IntegerField(null=True, unique=True),
        ),
        migrations.AddField(
            model_name='programgenre',
            name='program_theme',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tags.ProgramTheme'),
        ),
        migrations.AddField(
            model_name='programtheme',
            name='code',
            field=models.IntegerField(null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='advertiser',
            name='name',
            field=models.CharField(max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='advertisergroup',
            name='name',
            field=models.CharField(max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='brandcategory',
            name='name',
            field=models.CharField(max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='brandsector',
            name='name',
            field=models.CharField(max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='descriptor',
            name='text',
            field=models.CharField(max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='programgenre',
            name='name',
            field=models.CharField(max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='programtheme',
            name='name',
            field=models.CharField(max_length=128, unique=True),
        ),
        migrations.AddField(
            model_name='promo',
            name='advertiser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.Advertiser'),
        ),
        migrations.AddField(
            model_name='promo',
            name='brand_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.BrandName'),
        ),
        migrations.AddField(
            model_name='promo',
            name='channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='broadcasted_promo', to='tags.Channel'),
        ),
        migrations.AddField(
            model_name='promo',
            name='descriptor',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tags.Descriptor'),
        ),
        migrations.AddField(
            model_name='promo',
            name='promo_channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='self_promo', to='tags.Channel'),
        ),
        migrations.AddField(
            model_name='promo',
            name='title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.Title'),
        ),
        migrations.AddField(
            model_name='program',
            name='program_genre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.ProgramGenre'),
        ),
        migrations.AddField(
            model_name='program',
            name='title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.Title'),
        ),
        migrations.AddField(
            model_name='commercial',
            name='advertiser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.Advertiser'),
        ),
        migrations.AddField(
            model_name='commercial',
            name='brand_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.BrandName'),
        ),
        migrations.AddField(
            model_name='commercial',
            name='descriptor',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tags.Descriptor'),
        ),
        migrations.AddField(
            model_name='commercial',
            name='title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.Title'),
        ),
        migrations.AddField(
            model_name='channel',
            name='genre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.ChannelGenre'),
        ),
        migrations.AddField(
            model_name='channel',
            name='language',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='tags.ContentLanguage'),
        ),
        migrations.AddField(
            model_name='channel',
            name='network',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.ChannelNetwork'),
        ),
        migrations.AddField(
            model_name='channel',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.Region'),
        ),
        migrations.AddField(
            model_name='brandname',
            name='brand_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tags.BrandCategory'),
        ),
        migrations.AlterUniqueTogether(
            name='program',
            unique_together=set([('title', 'channel')]),
        ),
        migrations.AlterUniqueTogether(
            name='commercial',
            unique_together=set([('brand_name', 'descriptor')]),
        ),
    ]
